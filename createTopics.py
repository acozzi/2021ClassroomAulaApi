from __future__ import print_function
import pickle
import os.path
from googleapiclient.discovery import build
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
import json

SCOPES = ['https://www.googleapis.com/auth/classroom.topics']

def main():
    
    creds = None
    if os.path.exists('token.pickle'):
        with open('token.pickle', 'rb') as token:
            creds = pickle.load(token)
    
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file(
                'credentials.json', SCOPES)
            creds = flow.run_local_server(port=0)
        
        with open('token.pickle', 'wb') as token:
            pickle.dump(creds, token)

    service = build('classroom', 'v1', credentials=creds)

    """
    stream2021 = open('listaClassrooms.json', 'r', encoding='utf8')
    lista2021 = json.load(stream2021)
    stream2021.close()
    """

    topics = [
        {"name": '1째 Bimestre'},
        {"name": '2째 Bimestre'},
        {"name": '3째 Bimestre'},
        {"name": '4째 Bimestre'},
        {"name": 'Insumos'}
        ]
    lista2021 = [
        279121283871,
        279121282380,
        279121366298,
        279121149914,
        279121582402,
        279104511159,
        279120681086,
        279121244274,
        279121223653,
        285953634414,
        279120154470,
        279103475504,
        279121157543,
        279121646574,
        279121837850,
        279121957460,
        279121226319,
        279121034185,
        279122502672,
        279104365080,
        279103475614,
        279121830282,
        279121551912,
        279121842152,
        279120154616,
        279121284117,
        279121551934,
        279122293355,
        285953636944,
        279121842196,
        279121254429,
        279122309764,
        279121244420,
        279121278294,
        279121882334,
        279121278311,
        279122257144,
        285954081138,
        285956509235,
        285941901633,
        285955714376,
        285953634479,
        279121858438,
        279099761837,
        279121666352,
        279121278363,
        279119255268,
        279121666379,
        279104365326,
        279122223831,
        279104511566,
        279121212768,
        279123020422,
        279122478365,
        279104624102,
        279122371897,
        279105186288,
        279122503016,
        279122973445,
        279113109545,
        279122604532,
        279122204883,
        279104110989,
        279104365477,
        279122898786,
        279122965028,
        279122764713,
        279122987396,
        279122236977,
        279121278620,
        279123266171,
        279122862604,
        279123000454,
        279122478581,
        279103784524,
        279072779418,
        279123512087,
        279123527245,
        279123695135,
        279123414153,
        279123260604,
        279121973811,
        279122428994,
        279123576094,
        279072779548,
        279092823804,
        279104111260,
        279123783488,
        279123847381,
        279123892561,
        279119255651,
        279124119790,
        285953635913,
        285921263094,
        285953629678,
        285957233219,
        285953629748,
        285956521594,
        279124028398,
        279123687071,
        279123779559,
        279123224642,
        279104624583,
        279122987682,
        279124180820,
        279123783645,
        279104972603,
        279124381196,
        279105186658,
        279124087495,
        279123903246,
        279124180191,
        285947554513,
        285956262472,
        285957526230,
        285956485317,
        285956655078,
        285887133315,
        285934616662,
        285957533243,
        285956843420,
        285953620628,
        285953637350,
        285953630126,
        285958388999,
        285956601746,
        285958557643,
        285954130807,
        285960159504,
        285957851656,
        285957540069,
        285958557765,
        285957883633,
        285957639303,
        285958764225,
        285960159573,
        285954130909,
        285956916472,
        285953631028,
        285957214683,
        285958080687,
        285953631072,
        285958325223,
        285958006843,
        285958913463,
        285957047576,
        285960159736,
        285960563884,
        285956561843,
        285954131067,
        285957333755,
        285960107007,
        285961145466,
        285960324829,
        285941902240,
        285953631263,
        285960526230,
        285958755817
    ]
    for aula in lista2021:
        response = service.courses().topics().create(
            courseId=aula,
            body=topics[4]).execute()
        
if __name__ == '__main__':
    main()